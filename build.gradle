import me.champeau.jmh.JmhBytecodeGeneratorTask

plugins {
    id 'java'
    id 'me.champeau.jmh' version '0.6.8'
}

group 'io.github.leofuso'
version '1.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_19
targetCompatibility = JavaVersion.VERSION_19

repositories {
    mavenCentral()
}

compileJava {
    options.compilerArgs += ['--enable-preview', '--add-modules', 'jdk.incubator.vector']
}

compileTestJava {
    options.compilerArgs += ['--enable-preview', '--add-modules', 'jdk.incubator.vector']
}

compileJmhJava {
    options.compilerArgs += ['--enable-preview', '--add-modules', 'jdk.incubator.vector']
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

jmh {
    iterations = 10
    benchmarkMode = ['avgt']
    fork = 5
    failOnError = true
    forceGC = false
    jvmArgs = ['--add-modules', 'jdk.incubator.vector']
    profilers = ['perfnorm']
    jvmArgsAppend = ['--enable-preview', '--add-modules', 'jdk.incubator.vector']
    operationsPerInvocation = 10
    timeOnIteration = '1s'
    threads = 12
    timeUnit = 'ms'
    verbosity = 'NORMAL'
    warmup = '1s'
    warmupForks = 2
    warmupIterations = 5
    warmupMode = 'INDI'
}


jmhRunBytecodeGenerator {
    jvmArgs.add '--add-modules=jdk.incubator.vector'
}

test {
    minHeapSize = '128m'
    maxHeapSize = '2G'
    jvmArgs += ['--enable-preview', '--add-modules', 'jdk.incubator.vector']
    useJUnitPlatform()
}